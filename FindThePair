import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
import java.util.stream.Collectors;

/*
@Author: Ami JHA
 */
public class FindThePair {

    // Complete the sockMerchant function below.
    static int sockMerchant(int n, int[] ar) {


        System.out.println("list="+ar.length);

        int pair=0;



            //List listt = Arrays.asList(ar);
        List listt = new ArrayList();

        for(int j=0;j<n;j++){
            listt.add(ar[j]);

        }


            System.out.println("list size="+listt.size());

            List distinctList= (List) listt.stream().distinct().collect(Collectors.toList());

            System.out.println("distinctList="+distinctList.size());


            for(Object obj : distinctList){
                int count =Collections.frequency(listt,obj);
                System.out.println(count);

                pair=pair+count/2;

            }


        return pair;

    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        //BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int n = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] ar = new int[n];

        String[] arItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < n; i++) {
            int arItem = Integer.parseInt(arItems[i]);
            if(arItem>=1 && arItem <=100){
                ar[i] = arItem;
            }
        }

        int result = sockMerchant(n, ar);

        System.out.println(result);

        //bufferedWriter.write(String.valueOf(result));
        //bufferedWriter.newLine();

        //bufferedWriter.close();

        scanner.close();

    }
}
